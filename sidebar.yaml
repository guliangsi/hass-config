- sensor:
    - unique_id: sidebar
      state: template
      attributes:
        time: >
          {% set hours = now().strftime('%H') %}
          {% set minutes = now().strftime('%M') %}
          <span class="time">
            {{ hours }}<span class="time-colon">:</span>{{ minutes }}
          </span>
        date: |
          <font color='#6a7377'><b>
          {%- if strptime(states('sensor.date'), '%Y-%m-%d').day != null %}
          {%- set days = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'] %}
          {%- set months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',
          'Julliet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'] %}
            {{- days[now().weekday()] }}<br>
            {{- strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
          {%- endif -%}
          </b></font>
        greet: |
          <b>
          {%- set time = now().hour %}
          {%- if time <= 1 -%} Bonne nuit {{'\U0001F611'}}
          {%- elif time <= 3 -%} Bonne nuit {{'\U0001F62A'}}
          {%- elif time <= 5 -%} Bonne nuit {{'\U0001F634'}}
          {%- elif time <= 7 -%} Bonjour {{'\U0001F4A9'}}
          {%- elif time <= 9 -%} Bonjour {{'\u2615\uFE0F'}}
          {%- elif time <= 10 -%} Bonjour {{'\U0001F642'}}
          {%- elif time <= 13 -%} Bonne journée {{'\U0001F60A'}}
          {%- elif time <= 15 -%} Bonne journée {{'\U0001F60E'}}
          {%- elif time <= 17 -%} Bonne journée {{'\U0001F44B\U0001F3FB'}}
          {%- elif time <= 19 -%} Bonne soirée {{'\U0001F44B\U0001F3FB'}}
          {%- elif time <= 22 -%} Bonne soirée {{'\U0001F60C'}}
          {%- elif time <= 23 -%} Bonne soirée {{'\U0001F974'}}
          {%- else %} Bonne soirée {{'\U0001F974'}}
          {%- endif -%}
          </b>
        active: |
          {%- set lights = [
            states.light.eclairage_carport,
          ] %}

          {%- set switches = [
            states.binary_sensor.detecteur_ouverture_cuisine_contact,
            states.binary_sensor.detecteur_ouverture_salon_contact,
            states.binary_sensor.detecteur_ouverture_sejour_droite_contact,
            states.binary_sensor.detecteur_ouverture_sejour_gauche_contact,
          ] %}

          {%- set lights_on = lights | selectattr('state','eq','on') | list %}
          {%- set lights_name = lights | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}

          {%- set switches_on = switches | selectattr('state','eq','on') | list %}
          {%- set switches_name = switches | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}

          {%- if (lights_on | length == 0) and (switches_on | length > 1) -%}
            {{ switches_name | regex_replace(',([^,]*)$',' et\\1') }} allumés

          {%- elif (lights_on | length == 0) and (switches_on | length == 1) -%}
            {{ switches_name | regex_replace(',([^,]*)$',' et\\1') }} allumé

          {%- elif (lights_on | length == 1) and (switches_on | length > 1) -%}
            {{ lights_name }} et {{switches_name }} allumés

          {%- elif (lights_on | length == 1) and (switches_on | length > 1) -%}
            {{ lights_name }}, {{ switches_name | regex_replace(',([^,]*)$',' et\\1') }} allumés

          {%- elif (lights_on | length > 1) and (switches_on | length == 1) -%}
            {{ lights_on | length }} lampes et {{ switches_name }} sont allumés

          {%- elif (lights_on | length > 1) and (switches_on | length > 1) -%}
            {{ lights_on | length }} lampes, {{ switches_name | regex_replace(',([^,]*)$',' et\\1') }} allumés

          {%- elif (lights_on | length == 1) and (switches_on | length == 0) -%}
            {{ lights_name }} est allumée

          {%- elif (lights_on | length > 1) and (switches_on | length == 0) -%}
            {{ lights_on | length }} sont allumées

          {%- else %}
            <font color='#6a7377'>Tout est éteint</font>
          {%- endif -%}
        weather: |
          {% set temperature = state_attr('weather.forecast_maison', 'temperature') %}
          {% set precip = state_attr('weather.forecast_maison', 'forecast')[0]['precipitation'] | round %}
          {% set weather_state = states('weather.forecast_maison')
            | replace('rainy', 'Pluvieux')
            | replace('partlycloudy', 'Partiellement nuageux')
            | replace('cloudy', 'Nuageux')
            | replace('clear-night', 'Nuit claire')
            | replace('fog', 'Brumeux')
            | replace('hail', 'Grêleux')
            | replace('lightning-rainy', 'Orageux')
            | replace('lightning', 'Orageux')
            | replace('pourring', 'Pluie intense')
            | replace('snowy-rainy', 'Neigeux')
            | replace('snowy', 'Neigeux')
            | replace('sunny', 'Ensoleillé')
            | replace('windy-variant', 'Variblement venteux')
            | replace('windy', 'Venteux')
            | replace('exceptional', 'Exceptionel') %}
          {% if not state_attr('weather.forecast_maison', 'temperature') == 'unknow' %}
            {% if temperature | float <= 0.0 %}
              {{ weather_state }}, il fait {{ temperature }}° avec {{ precip }}% de risque de pluie. {{'\u2744\uFE0F' if precip > 30 }}
              Il fait {{ states('sensor.detecteur_fumee_entree_air_temperature') }}°C dans la maison.
            {% elif temperature | float > 0.0 %}
              {{ weather_state }}, il fait {{ temperature }}° avec {{ precip }}% de risque de pluie. {{ '\u2614\uFE0F' if precip > 30 }}
              Il fait {{ states('sensor.detecteur_fumee_entree_air_temperature') }}°C dans la maison.
            {% endif %}
          {% else %}
            Pas d'information métérologique...
          {% endif %}

- sensor:
    - name: "poubelle_verte_jour"
      state: >-
        {% set delta = state_attr('calendar.poubelle_dechets', 'start_time') | as_datetime | as_local - today_at() %}
        {{ {0: "Aujourd'hui", 1: "Demain"}.get(delta.days, 'Dans ' ~ delta.days ~  ' Jours') }}
      attributes:
        date: >-
          {{ as_timestamp(states.calendar.poubelle_dechets.attributes.start_time) | timestamp_custom("%d/%m/%y", True) }}
        jours: "{{((as_timestamp(states.calendar.poubelle_dechets.attributes.start_time)- as_timestamp(now())) /86400+1) | int}}"
    - name: "poubelle_jaune_jour"
      state: >-
        {% set delta = state_attr('calendar.poubelle_tri', 'start_time') | as_datetime | as_local - today_at() %}
        {{ {0: "Aujourd'hui", 1: "Demain"}.get(delta.days, 'Dans ' ~ delta.days ~  ' Jours') }}
      attributes:
        date: >-
          {{ as_timestamp(states.calendar.poubelle_tri.attributes.start_time) | timestamp_custom("%d/%m/%y", True) }}
        jours: "{{((as_timestamp(states.calendar.poubelle_tri.attributes.start_time)- as_timestamp(now())) /86400+1) | int}}"
    - name: "next_poubelle"
      state: >-
        {% set jour_poubelle_verte = state_attr('sensor.poubelle_verte_jour', 'jours')  %}
        {% set jour_poubelle_jaune = state_attr('sensor.poubelle_jaune_jour', 'jours')  %}
        {% if jour_poubelle_verte > jour_poubelle_jaune %} jaune
        {% else %} verte
        {% endif %}
      attributes:
        jours: >-
          {% set jour_poubelle_verte = state_attr('sensor.poubelle_verte_jour', 'jours')  %}
          {% set jour_poubelle_jaune = state_attr('sensor.poubelle_jaune_jour', 'jours')  %}
          {% if jour_poubelle_verte > jour_poubelle_jaune %} {{jour_poubelle_jaune}}
          {% else %} {{jour_poubelle_verte}}
          {% endif %}
        hjours: >-
          {% set jour_poubelle_verte = state_attr('sensor.poubelle_verte_jour', 'jours')  %}
          {% set hjour_poubelle_verte = states('sensor.poubelle_verte_jour')  %}
          {% set jour_poubelle_jaune = state_attr('sensor.poubelle_jaune_jour', 'jours')  %}
          {% set hjour_poubelle_jaune = states('sensor.poubelle_jaune_jour')  %}
          {% if jour_poubelle_verte > jour_poubelle_jaune %} {{hjour_poubelle_jaune}}
          {% else %} {{hjour_poubelle_verte}}
          {% endif %}
- sensor:
    - name: number_volets_maison
      state: >-
        {% set ns = namespace(total=0) %}
        {% for cover in state_attr('cover.volets_maison', 'entity_id') %}
          {% set ns.total = ns.total + 1 %}
        {%endfor%}
        {{ ns.total }}
      attributes:
        ouvert: >-
          {% set ns1 = namespace(ouvert=0) %}
          {% for cover in state_attr('cover.volets_maison', 'entity_id') if is_state(cover, 'open') %}
          {% set ns1.ouvert = ns1.ouvert + 1 %}
          {%endfor%}
          {{ ns1.ouvert }}
        fermee:  >-
          {% set ns2 = namespace(fermee=0) %}
          {% for cover in state_attr('cover.volets_maison', 'entity_id') if is_state(cover, 'closed') %}
          {% set ns2.fermee = ns2.fermee + 1 %}
          {%endfor%}
          {{ ns2.fermee }}

- binary_sensor:
    - name: "soleil volets est"
      unique_id: soleil_volets_est
      state: '{{ (56 < (states("sensor.sunazimuth")|float) < 124) and ((states("sensor.sunelevation")|float) > 0) }}'
    - name: "soleil volets sud"
      unique_id: soleil_volets_sud
      state: '{{ (65 < (states("sensor.sunazimuth")|float) < 225) and ((states("sensor.sunelevation")|float) > 0) }}'
    - name: "soleil volets sud ouest"
      unique_id: soleil_volets_sud_ouest
      state: '{{ (135 < (states("sensor.sunazimuth")|float) < 260) and ((states("sensor.sunelevation")|float) > 0) }}'
    - name: "soleil volets chambres sud"
      unique_id: soleil_volets_chambres_sud
      state: '{{ (80 < (states("sensor.sunazimuth")|float) < 225) and ((states("sensor.sunelevation")|float) > 0) }}'
    - name: "soleil volets ouest"
      unique_id: soleil_volets_ouest
      state: '{{ (130 < (states("sensor.sunazimuth")|float) < 300) and ((states("sensor.sunelevation")|float) > 0) }}'
    - name: "soleil volets nord"
      unique_id: soleil_volets_nord
      state: '{{ (230 < (states("sensor.sunazimuth")|float) < 300) and ((states("sensor.sunelevation")|float) > 0) }}'
